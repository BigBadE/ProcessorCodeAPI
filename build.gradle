plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'io.freefair.lombok' version '5.3.0'
}

allprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'java'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'com.github.johnrengelman.shadow'

    version '1.0.1'

    sourceCompatibility = targetCompatibility = 8

    generateLombokConfig.enabled = false

    lombok {
        version = '1.18.20'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

        testImplementation 'org.mockito:mockito-core:3.3.3'
        testImplementation 'org.powermock:powermock-module-junit4:2.0.7'
        testImplementation 'org.powermock:powermock-api-mockito2:2.0.7'
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
        repositories {
            mavenLocal()
        }
    }

    shadowJar {
        archiveClassifier.set('')
    }
}

task genJavadocs(type: Javadoc) {
    options.source = "8"
    options.addStringOption("link", "https://docs.oracle.com/javase/8/docs/api/")
    Project[] projects = [project(':core'), project]
    source projects.collect { project -> project.delombok }
    classpath = files(projects.collect { project -> project.sourceSets.main.compileClasspath })
}

javadoc {
    dependsOn delombok
    source = delombok
    failOnError = false
}

task javadocJar(type: Jar, dependsOn: build) {
    from genJavadocs
    archiveClassifier.set('javadoc')
}

build.finalizedBy(javadocJar)

task sourcesJar(type: Jar) {
    dependsOn delombok
    from delombok
    archiveClassifier.set('sources')
}

artifacts {
    archives sourcesJar
}

dependencies {
    implementation project(':core')
    implementation project(':javac')
    implementation project(':eclipse')
}

subprojects {
    group 'com.bigbade.processorcodeapi'
}

shadowJar {
    archiveClassifier.set('')
}

group 'com.bigbade'
